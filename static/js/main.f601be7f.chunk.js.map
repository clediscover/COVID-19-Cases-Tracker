{"version":3,"sources":["App.js","index.js"],"names":["MainTitle","className","SearchField","onChange","options","value","isMulti","placeholder","Cases","cases","addClass","children","ConfirmedCases","RecoveredCases","DeathCases","AllCases","confirmed","recovered","deaths","country","InfoBanner","App","state","countries","selectedCountries","label","allCases","selectCountry","setState","getCountryData","this","setCountries","Axios","get","data","map","name","push","toLocaleString","useCountry","allCase","newCases","Promise","all","a","isCasesInAllCases","worldWideData","concat","unrenderCountryData","length","filter","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f601be7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\nconst MainTitle = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row my-2\">\r\n        <h1 className=\"col text-center display-4\">COVID-19 UPDATE</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchField = ({onChange, options, value}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row my-3 mx-lg-3\">\r\n        <div className=\"col card card-body text-center mx-4\">\r\n          <h2 className=\"mb-3\">Search country</h2>\r\n          <Select\r\n            isMulti={true} \r\n            value={value}\r\n            options={options} \r\n            onChange={onChange} \r\n            placeholder=\"Search here...\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Cases = ({cases, addClass, children}) => {\r\n  return (\r\n    <div className={\"text-center my-2 rounded p-2 \" + addClass}>\r\n      <h4 className=\"font-weight-bold\">{children} Cases</h4>\r\n      <p>{cases}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ConfirmedCases = ({cases}) => {\r\n  return <Cases cases={cases} addClass=\"bg-warning\">Confirmed</Cases>;\r\n}\r\n\r\nconst RecoveredCases = ({cases}) => {\r\n  return <Cases cases={cases} addClass=\"bg-success text-white\">Recovered</Cases>;\r\n}\r\n\r\nconst DeathCases = ({cases}) => {\r\n  return <Cases cases={cases} addClass=\"bg-danger text-white\">Death</Cases>;\r\n}\r\n\r\nconst AllCases = ({confirmed, recovered, deaths, country}) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4\">\r\n      <div className=\"card mx-4 mx-md-0 my-3\">\r\n        <h3 className=\"card-header\">{country}</h3>\r\n        <div className=\"card-body\">\r\n          <ConfirmedCases cases={confirmed} />\r\n          <RecoveredCases cases={recovered} />\r\n          <DeathCases cases={deaths} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InfoBanner = () => {\r\n  return (\r\n    <div className=\"container text-white text-center lead \">\r\n      <div className=\"row mx-4 mx-lg-5\">\r\n        <div className=\"col card bg-info p-2\">\r\n          <p>No country is selected.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    countries: [],\r\n    selectedCountries: [\r\n      {value: 'Worldwide', label: 'Worldwide'},\r\n      {value: 'Philippines', label: 'Philippines'},\r\n      {value: 'India', label: 'India'}\r\n    ],\r\n    allCases: []\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.setCountries();\r\n    this.getCountryData();\r\n  }\r\n\r\n  async setCountries () {\r\n    const {data} = await Axios.get('https://covid19.mathdro.id/api/countries');\r\n    let countries = data.countries;\r\n    countries = countries.map(({name}) => ({value: name, label: name}));\r\n    countries.push({value: 'Worldwide', label: 'Worldwide'});\r\n    this.setState({countries});\r\n  }\r\n\r\n  async worldWideData () {\r\n    const {data} = await Axios.get('https://covid19.mathdro.id/api');\r\n    const cases = {\r\n      confirmed: data.confirmed.value.toLocaleString(),\r\n      recovered: data.recovered.value.toLocaleString(),\r\n      deaths: data.deaths.value.toLocaleString(),\r\n      country: 'Worldwide'\r\n    };\r\n\r\n    return cases;\r\n  }\r\n\r\n  isCasesInAllCases (cases, useCountry=false, country='') {\r\n    const allCases = this.state.allCases;\r\n    for (let allCase of allCases) {\r\n      if (country === '' && !useCountry) {\r\n        if (allCase.country === cases.country) return true;\r\n        continue;\r\n      }\r\n      if (allCase.country === country) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async getCountryData () {\r\n    const {selectedCountries, allCases} = this.state;\r\n    let newCases = [];\r\n    \r\n    await Promise.all(selectedCountries.map(async ({value}) => {\r\n      if (!this.isCasesInAllCases(null, true, value)) {\r\n        let cases;\r\n        if (value === 'Worldwide') {\r\n          cases = await this.worldWideData();\r\n          if (!this.isCasesInAllCases(cases)) newCases.push(cases);\r\n          return;\r\n        }\r\n        const {data} = await Axios.get(`https://covid19.mathdro.id/api/countries/${value}`);\r\n        cases = {\r\n          confirmed: data.confirmed.value.toLocaleString(),\r\n          recovered: data.recovered.value.toLocaleString(),\r\n          deaths: data.deaths.value.toLocaleString(),\r\n          country: value\r\n        };\r\n        if (!this.isCasesInAllCases(cases)) newCases.push(cases);\r\n      }\r\n    }));\r\n\r\n    this.setState({allCases: allCases.concat(newCases)});\r\n    this.unrenderCountryData();\r\n  }\r\n\r\n  unrenderCountryData () {\r\n    const {selectedCountries, allCases} = this.state;\r\n    if (allCases.length > 0) {\r\n      let newCases = allCases.filter(cases => {\r\n        for (let selectedCountry of selectedCountries) {\r\n          if (selectedCountry.value === cases.country) return true;\r\n        }\r\n        return false;\r\n      });\r\n  \r\n      this.setState({allCases: newCases});\r\n    }\r\n  }\r\n\r\n  selectCountry = selectedCountries => {\r\n    if (selectedCountries === null) {\r\n      this.setState(\r\n        {\r\n          selectedCountries: []\r\n        },\r\n        this.getCountryData // callback\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.setState(\r\n      {selectedCountries},\r\n      this.getCountryData\r\n    );\r\n  }\r\n\r\n  render () {\r\n    const {selectedCountries, countries, allCases} = this.state;\r\n    return (\r\n      <section>\r\n        <MainTitle />\r\n        <SearchField value={selectedCountries} options={countries} onChange={this.selectCountry} />\r\n        {\r\n          allCases.length > 0 &&\r\n          <article className=\"container\">\r\n            <div className=\"row\">\r\n              {allCases.map(cases => <AllCases key={cases.country} {...cases} />)}\r\n            </div>\r\n          </article>\r\n        }\r\n        \r\n        {selectedCountries.length === 0 && <InfoBanner />}\r\n      </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}